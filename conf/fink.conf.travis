# Copyright 2018 AstroLab Software
# Author: Julien Peloton
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
######################################
# Infrastructure
# Kafka producer stream location
KAFKA_IPPORT=""
KAFKA_TOPIC=""

# From which offset you want to start pulling data. Options are:
# latest (only new data), earliest (connect from the oldest
# offset available), or a number (see Spark Kafka integration).
KAFKA_STARTING_OFFSET="earliest"

# Apache Spark mode
SPARK_MASTER="local[*]"

# Should be Spark options actually (cluster resources, ...)
EXTRA_SPARK_CONFIG=""

# Should be Kafka secured options actually (to allow connection to Kafka)
SECURED_KAFKA_CONFIG=''

# These are the Maven Coordinates of dependencies for Fink
# Change the version according to your Spark version.
# NOTE: HBase packages are not required for Parquet archiving
FINK_PACKAGES=\
org.apache.spark:spark-streaming-kafka-0-10-assembly_2.11:2.4.1,\
org.apache.spark:spark-sql-kafka-0-10_2.11:2.4.1,\
org.apache.spark:spark-avro_2.11:2.4.1,\
org.apache.hbase:hbase-client:2.1.4,\
org.apache.hbase:hbase-common:2.1.4,\
org.apache.hbase:hbase-mapreduce:2.1.4

# Other dependencies (incl. Scala part of Fink)
FINK_JARS=${FINK_HOME}/libs/fink-broker_2.11-0.2.0.jar,\
${FINK_HOME}/libs/shc-core-1.1.3-2.4-s_2.11.jar

# Time interval between 2 trigger updates (second)
# i.e. the timing of streaming data processing.
# If 0, the query will be executed in micro-batch mode,
# where micro-batches will be generated as soon as the previous
# micro-batch has completed processing.
# Note that this timing is also used for updating the dashboard.
FINK_TRIGGER_UPDATE=2

# Alert schema
# Full path to schema to decode the alerts
FINK_ALERT_SCHEMA=${FINK_HOME}/schemas/template_schema_ZTF.avro

# Path on disk to save live data. Paths must exist.
# They can be in local FS (files:///path/) or
# in distributed FS (e.g. hdfs:///path/).
# Be careful though to have enough disk space!
FINK_ALERT_PATH=${FINK_HOME}/archive/alerts_store

FINK_ALERT_CHECKPOINT_RAW=${FINK_HOME}/archive/alerts_raw_checkpoint

FINK_ALERT_CHECKPOINT_SCI=${FINK_HOME}/archive/alerts_sci_checkpoint

# The name of the HBase table
SCIENCE_DB_NAME="test_travis"
SCIENCE_DB_CATALOG=${FINK_HOME}/catalog.json

# HBase configuration file - must be under ${SPARK_HOME}/conf
# You can find an example in ${FINK_HOME}/conf
HBASE_XML_CONF=${SPARK_HOME}/conf/hbase-site.xml

######################################
# Dashboard
# Where the web data will be posted and retrieved by the UI.
# For small files, you can keep this location.
# If you plan on having large files, change to a better suited location.
FINK_UI_PATH=${FINK_HOME}/web/data

# The UI will listen on this port
FINK_UI_PORT=5000

######################################
# Simulator
# Simulate a fake stream, and access it locally
# Kafka producer stream location:
KAFKA_PORT_SIM=29092
KAFKA_IPPORT_SIM="localhost:${KAFKA_PORT_SIM}"
KAFKA_TOPIC_SIM="ztf-stream-sim"

# Where the data for sims is
FINK_DATA_SIM=${FINK_HOME}/datasim

# Time between 2 alerts (second)
TIME_INTERVAL=0.1

# Total number of alerts to send
POOLSIZE=10

######################################
# Distribution
# Configurations for Alert Re-Distribution
# The path where to store the avro distribution schema
DISTRIBUTION_SCHEMA=${FINK_HOME}/schemas/distribution_schema.avsc
DISTRIBUTION_OFFSET="latest"
DISTRIBUTION_OFFSET_FILE=${FINK_HOME}/distribution.offset
DISTRIBUTION_RULES_XML=${FINK_HOME}/conf/distribution-rules.xml
